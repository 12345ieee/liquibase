<project name="sun.dbmigrator" default="integration-build">
    <property file="build.properties"/>
    <property file="build.integration.properties"/>

    <import file="build.xml" optional="false"/>

    <target name="integration-build">
        <antcall target="svnupdate" inheritAll="true" inheritRefs="true"/>
        <delete dir="${reports.dir}/junit/${ant.project.name}"/>
        <delete dir="${reports.dir}/junit-report/${ant.project.name}"/>

        <antcall target="clean" inheritAll="true" inheritRefs="true"/>
        <antcall target="prepare" inheritAll="true" inheritRefs="true"/>
        <antcall target="labelbuild" inheritAll="true" inheritRefs="true"/>
        <antcall target="compile" inheritAll="true" inheritRefs="true"/>
        <antcall target="clover-setup" inheritAll="true" inheritRefs="true"/>
        <antcall target="findbugs" inheritAll="true" inheritRefs="true"/>
        <antcall target="checkstyle" inheritAll="true" inheritRefs="true"/>
        <antcall target="javadoc" inheritAll="true" inheritRefs="true"/>
        <antcall target="junit" inheritAll="true" inheritRefs="true"/>
        <antcall target="jdepend" inheritAll="true" inheritRefs="true"/>
        <antcall target="javancss" inheritAll="true" inheritRefs="true"/>
        <antcall target="clover-report" inheritAll="true" inheritRefs="true"/>
        <antcall target="package" inheritAll="true" inheritRefs="true"/>
        <antcall target="deployToLatest" inheritAll="true" inheritRefs="true"/>
    </target>

    <target name="integration-build-fast">
        <property name="fast.build" value="true"/>
        <antcall target="integration-build" inheritAll="true" inheritRefs="true"/>
    </target>

    <target name="labelbuild">
        <propertyfile file="buildinfo.properties">
            <entry key="buildlabel" value="${label}"/>
            <entry key="buildstarted" value="${cctimestamp}"/>
        </propertyfile>
    </target>

    <target name="junit" depends="prepare" if="is.build.server">  <!--unless="fast.build"-->
        <mkdir dir="${reports.dir}/junit/"/>
        <mkdir dir="${reports.dir}/junit/${ant.project.name}/"/>
        <junit printsummary="yes" haltonfailure="${halt.on.junit.failure}" fork="yes" forkmode="once" reloading="false"
               failureproperty="unit.tests.failed"
               jvm="${java.home}/bin/java">
            <jvmarg value="-Xmx256m"/>
            <env key="JAVA_HOME" path="${env.JAVA_HOME}"/>
            <classpath>
                <pathelement path="${clover.build.dir}"/>
                <pathelement path="${clover.build.test.dir}"/>
                <fileset dir="${clover.home}/lib">
                    <include name="clover*.jar"/>
                </fileset>
                <path refid="classpath"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${reports.dir}/junit/${ant.project.name}">
                <fileset dir="${clover.build.test.dir}">
                    <include name="**/*Test.class"/>
                    <exclude name="**/Base*"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
            </batchtest>
        </junit>

        <mkdir dir="${reports.dir}/junit-report/"/>
        <mkdir dir="${reports.dir}/junit-report/${ant.project.name}/"/>
        <junitreport todir="${reports.dir}/junit-report/${ant.project.name}">
            <fileset dir="${reports.dir}/junit/${ant.project.name}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.dir}/junit-report/${ant.project.name}"/>
        </junitreport>
    </target>

    <target name="svnupdate" if="is.build.server">

        <taskdef resource="svntask.properties"/>
        <echo>SVN Update: ${basedir}/..</echo>
        <sleep></sleep>
        <svn javahl="false" username="rocvs" password="s33v33es">
            <update dir="${basedir}/.."/>
        </svn>
    </target>

    <target name="javadoc" depends="prepare">
        <mkdir dir="${reports.dir}/api"></mkdir>
        <javadoc
                destdir="${reports.dir}/api"
                author="true"
                version="true"
                use="true"
                windowtitle="LiquiBASE API (${build.version})"
                linksource="false"
                useexternalfile="yes"
                breakiterator="yes">

            <fileset dir="${src.dir}/java" defaultexcludes="yes"/>
            <classpath refid="classpath"/>
            <bottom><![CDATA[<i>Copyright &#169; 2006 Sundog. All Rights Reserved.</i>]]></bottom>
        </javadoc>
    </target>

    <target name="findbugs" depends="prepare" unless="fast.build">
        <taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
        <property name="findbugs.home" value="c:/findbugs"/>

        <mkdir dir="${reports.dir}/findbugs/${ant.project.name}"></mkdir>
        <findbugs home="${findbugs.home}"
                  output="xml"
                  outputFile="${reports.dir}/findbugs/${ant.project.name}/findbugs.xml"
                  excludeFilter="${src.dir}/findbugs.exclude.xml"
                  jvmargs="-Xmx256m">
            <auxClasspath refid="classpath"/>
            <class location="${build.dir}/"/>
            <class location="${build.test.dir}/"/>
        </findbugs>
        <xslt in="${reports.dir}/findbugs/${ant.project.name}/findbugs.xml"
              out="${reports.dir}/findbugs/${ant.project.name}/index.html"
              style="${src.dir}/findbugs-summary.xsl">
            <param name="buildLabel" expression="${label}"/>
        </xslt>
        <xslt in="${reports.dir}/findbugs/${ant.project.name}/findbugs.xml"
              out="${reports.dir}/findbugs/${ant.project.name}/details.html"
              style="${src.dir}/findbugs-fancy.xsl">
            <param name="buildLabel" expression="${label}"/>
        </xslt>

    </target>

    <target name="clover-setup" depends="prepare" if="is.build.server"> <!-- unless="fast.build"-->
        <taskdef resource="clovertasks"/>
        <typedef resource="clovertypes"/>

        <mkdir dir="${clover.db.dir}"/>
        <mkdir dir="${clover.history.dir}"/>
        <mkdir dir="${basedir}/../clover-tmp"/>

        <clover-setup
                initstring="${clover.db.dir}/${ant.project.name}.coverage.db"
                preserve="false"
                flushpolicy="interval"
                flushinterval="5000"
                tmpdir="${basedir}/../clover-tmp">
            <files>
                <exclude name="**/*Test.java"/>
                <exclude name="**/*Id.java"/>
            </files>
        </clover-setup>

        <copy todir="${clover.build.dir}">
            <fileset dir="${build.dir}" excludes="**/*.class"/>
        </copy>
        <copy todir="${clover.build.test.dir}">
            <fileset dir="${build.test.dir}" excludes="**/*.class"/>
        </copy>

        <common-compile build-dir="${clover.build.dir}" build-test-dir="${clover.build.test.dir}"></common-compile>

    </target>

    <target name="clover-report" depends="clover-setup" if="is.build.server"> <!-- unless="fast.build"-->
        <tstamp>
            <format property="clover.report.limit" pattern="MM/dd/yyyy hh:mm aa"
                    offset="-1" unit="month"/>
        </tstamp>
        <clover-historypoint historyDir="${clover.history.dir}"/>
        <clover-log level="summary"/>

        <clover-report
                failOnError="false">
            <current outfile="${reports.dir}/clover/${ant.project.name}"
                     title="Clover report for: ${label}"
                     alwaysReport="true">
                <format type="html"/>
            </current>
            <historical outfile="${reports.dir}/clover/${ant.project.name}/historical"
                        title="Clover historical report for: ${label}"
                        alwaysReport="true"
                        historyDir="${clover.history.dir}"
                        dateFormat="MM/dd/yyyy hh:mm aa"
                        from="${clover.report.limit}">
                <overview/>
                <coverage/>
                <movers threshold="5%" range="20" interval="2w"/>
                <format type="html"/>
            </historical>
        </clover-report>

        <clover-clean/>
    </target>

    <target name="checkstyle" depends="prepare" unless="fast.build">
        <mkdir dir="${reports.dir}/checkstyle/${ant.project.name}"/>
        <taskdef resource="checkstyletask.properties" classpath="${checkstyle.home}/checkstyle-all-3.5.jar"/>
        <checkstyle
                config="${src.dir}/checkstyle_checks.xml"
                failOnViolation="false">
            <fileset dir="${src.dir}/java" includes="**/*.java" excludes="**/*Id.java"/>
            <fileset dir="${src.dir}/java-test" includes="**/*.java"/>

            <formatter type="xml" toFile="${reports.dir}/checkstyle/${ant.project.name}/index.xml"/>

            <!-- Location of cache-file. Something that is project specific -->
            <property key="checkstyle.cache.file" file="target/cachefile"/>
            <property key="translation.severity" value="warning"/>
        </checkstyle>

        <xslt in="${reports.dir}/checkstyle/${ant.project.name}/index.xml"
              out="${reports.dir}/checkstyle/${ant.project.name}/index.html"
              style="${src.dir}/checkstyle.xslt">
            <param name="buildLabel" expression="${label}"/>
        </xslt>
    </target>

    <target name="jdepend" depends="prepare" unless="fast.build">
        <mkdir dir="${reports.dir}/jdepend/${ant.project.name}"/>
        <jdepend format="xml" outputfile="${reports.dir}/jdepend/${ant.project.name}/index.xml">
            <exclude name="java.*"/>
            <exclude name="javax.*"/>
            <classespath>
                <pathelement location="${build.dir}"/>
            </classespath>
            <classpath location="${build.dir}"/>
        </jdepend>
        <style basedir="${reports.dir}/jdepend/${ant.project.name}" destdir="${reports.dir}/jdepend/${ant.project.name}"
               includes="index.xml"
               style="${ant.home}/etc/jdepend.xsl"/>
    </target>
    <target name="javancss" depends="prepare" unless="fast.build">
        <mkdir dir="${reports.dir}/javancss/${ant.project.name}"/>
        <taskdef name="javancss"
                 classname="javancss.JavancssAntTask"/>

        <javancss srcdir="${src.dir}"
                  abortOnFail="false"
                  generateReport="true"
                  outputfile="${reports.dir}/javancss/${ant.project.name}/index.xml"
                  includes="**/*.java"
                  format="xml"/>
        <style basedir="${reports.dir}/javancss/${ant.project.name}"
               destdir="${reports.dir}/javancss/${ant.project.name}"
               includes="index.xml"
               style="${src.dir}/javancss2html.xsl"/>
    </target>

</project>