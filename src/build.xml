<project name="liquibase" default="all">

    <property file="build.properties"/>

    <target name="prepare">
        <property file="build.local.properties"/>
        <property file="build.properties"/>

        <tstamp>
            <format property="build.start" pattern="MM/DD/yyyy hh:mm aa"></format>
        </tstamp>

        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.test.dir}"/>
        <mkdir dir="${build.db.test.dir}"/>
        <mkdir dir="${release.dir}"/>
        <mkdir dir="${release.site.dir}"/>
        <mkdir dir="${lib.deps.dir}"/>
        <mkdir dir="${reports.dir}"/>
        <mkdir dir="${reports.dir}/api"/>
        <mkdir dir="${reports.dir}/doxygen"/>

        <!-- Build classpath -->
        <path id="classpath">
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </fileset>
            <fileset dir="${lib.compile.dir}">
                <include name="**/*.jar"/>
            </fileset>
            <pathelement location="${build.dir}"/>
            <pathelement path="${user.home}/.IntelliJIdea50/config/plugins/clover-idea5.jar"/>
            <fileset dir="${release.dir}">
                <include name="**/*.jar"/>
            </fileset>
        </path>
    </target>

    <target name="retroweave" depends="prepare">
        <taskdef name="retroweaver" classname="net.sourceforge.retroweaver.ant.RetroWeaverTask">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib.compile.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib.14jvm.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>

        <retroweaver srcdir="${build.dir}"/>
        <retroweaver srcdir="${build.test.dir}"/>
        <retroweaver srcdir="${build.db.test.dir}"/>

        <!--<retroweaver inputjar="${lib.dir}/easymock-2.2.jar" outputjar="${lib.14jvm.dir}/easymock-2.2-retroweave.jar"/>-->
        <!--<retroweaver inputjar="${lib.dir}/easymockclassextension-2.2.jar" outputjar="${lib.14jvm.dir}/easymockclassextension-2.2-retroweave.jar"/>-->

    </target>

    <target name="package" depends="prepare">
        <jar destfile="${release.dir}/${ant.project.name}-SNAPSHOT.jar" basedir="${build.dir}"
             manifest="${src.dir}/java/META-INF/MANIFEST.MF"/>

        <zip destfile="${release.dir}/liquibase-${build.version}.zip">
            <zipfileset dir="${src.dir}" includes="changelog.txt"/>
            <zipfileset dir="${src.dir}/zip" excludes="**/.svn/**"/>
            <zipfileset dir="${release.dir}" includes="liquibase-SNAPSHOT.jar"
                        fullpath="liquibase-${build.version}.jar"/>
            <zipfileset dir="${release.dir}/../" includes="samples/**" excludes="**/.svn/**"/>
            <zipfileset dir="${src.dir}" includes="lgpl.txt" fullpath="lgpl.txt"/>
            <zipfileset dir="${release.site.dir}/" prefix="docs"/>
        </zip>

        <zip destfile="${release.dir}/liquibase-${build.version}-src.zip">
            <zipfileset dir="${src.dir}" includes="changelog.txt"/>
            <zipfileset dir="${release.dir}" includes="liquibase-SNAPSHOT.jar"
                        fullpath="release/liquibase-${build.version}.jar"/>
            <zipfileset dir="${release.dir}/../" includes="samples/**" excludes="**/.svn/**"/>
            <zipfileset dir="${src.dir}" includes="lgpl.txt" fullpath="lgpl.txt"/>
            <zipfileset dir="${release.site.dir}/" prefix="docs"/>
            <zipfileset dir="${src.dir}/java" excludes="**/.svn/**" prefix="src/java"/>
            <zipfileset dir="${src.dir}/java-test" excludes="**/.svn/**" prefix="src/java-test"/>
            <zipfileset dir="${src.dir}/../lib" excludes="**/.svn/**" prefix="lib"/>
            <zipfileset dir="${src.dir}/../lib-compile" excludes="**/.svn/**" prefix="lib-compile"/>
            <zipfileset dir="${src.dir}" includes="build.xml" prefix="src"/>
            <zipfileset dir="${src.dir}" includes="build.properties" prefix="src"/>
        </zip>

        <taskdef name="retroweaver" classname="net.sourceforge.retroweaver.ant.RetroWeaverTask">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib.compile.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib.14jvm.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>

        <retroweaver srcdir="${build.dir}"/>

        <jar destfile="${release.dir}/${ant.project.name}-SNAPSHOT-14jvm.jar"
             manifest="${src.dir}/java/META-INF/MANIFEST.MF" index="true">
            <zipfileset dir="${build.dir}"/>
            <zipgroupfileset dir="${lib.14jvm.dir}" includes="retroweaver-rt-*.jar"/>
        </jar>

        <zip destfile="${release.dir}/liquibase-${build.version}-14jvm.zip">
            <zipfileset dir="${src.dir}" includes="changelog.txt"/>
            <zipfileset dir="${src.dir}/zip" excludes="**/.svn/**"/>
            <zipfileset dir="${release.dir}" includes="liquibase-SNAPSHOT-14jvm.jar"
                        fullpath="liquibase-${build.version}.jar"/>
            <zipfileset dir="${release.dir}/../" includes="samples/**" excludes="**/.svn/**"/>
            <zipfileset dir="${src.dir}" includes="lgpl.txt" fullpath="lgpl.txt"/>
            <zipfileset dir="${release.site.dir}/" prefix="docs"/>
            <zipfileset dir="${lib.14jvm.dir}" prefix="lib-14jvm"/>
        </zip>

    </target>

    <target name="compile" depends="prepare">
        <copy todir="${build.dir}" filtering="true">
            <filterset>
                <filter token="BUILD.VERSION" value="${build.version}"/>
            </filterset>
            <fileset dir="${src.dir}/java"
                     includes="**/*.properties, **/*.xml, **/*.config, **/*.txt, **/*.jdo, **/*.tld, **/*.xsd"/>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}/java" includes="**/*.jpg, **/*.png, **/*.gif"/>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}/java" includes="**/help/**"/>
        </copy>
        <copy todir="${build.dir}/liquibase/">
            <fileset dir="${src.dir}" includes="buildinfo.properties"/>
        </copy>

        <javac srcdir="${src.dir}/java" destdir="${build.dir}" deprecation="${deprecation}" debug="${debug}"
               optimize="${optimize}" source="1.5">
            <classpath refid="classpath"/>
        </javac>

        <mkdir dir="${build.test.dir}"/>
        <javac srcdir="${src.dir}/java-test" destdir="${build.test.dir}" deprecation="${deprecation}"
               debug="${debug}" optimize="${optimize}" source="1.5">
            <classpath refid="classpath"/>
        </javac>
        <copy todir="${build.test.dir}">
            <fileset dir="${src.dir}/java-test"
                     includes="**/*.properties, **/*.xml, **/*.txt, **/*.config, **/*.tld, **/*.xsd"/>
        </copy>

        <javac srcdir="${src.dir}/java-dbtest" destdir="${build.db.test.dir}" deprecation="${deprecation}"
               debug="${debug}" optimize="${optimize}" source="1.5">
            <classpath refid="classpath"/>
        </javac>

        <propertyfile file="${build.dir}/buildinfo.properties">
            <entry key="build.version" value="${build.version}"/>
            <entry key="build.timestamp"
                   type="date"
                   pattern="yyyy-MM-dd'T'HH:mm:ss"
                   value="now"/>
        </propertyfile>
    </target>

    <target name="clean">
        <property file="build.properties"/>

        <delete dir="${build.dir}"/>
        <delete dir="${build.test.dir}"/>
        <delete dir="${build.db.test.dir}"/>
        <delete dir="${release.dir}"/>
        <delete dir="${lib.deps.dir}"/>

        <delete dir="${reports.dir}"/>
    </target>

    <target name="site" depends="prepare">
        <loadfile property="nav.main" srcFile="${src.dir}/site/nav/main.html"/>
        <loadfile property="nav.manual" srcFile="${src.dir}/site/nav/manual.html"/>
        <loadfile property="nav.ide" srcFile="${src.dir}/site/nav/ide.html"/>
        <loadfile property="nav.news" srcFile="${src.dir}/site/nav/news.html"/>
        <loadfile property="analytics" srcFile="${src.dir}/site/analytics.html"/>

        <copy todir="${release.site.dir}" filtering="true">
            <fileset dir="${src.dir}/site">
                <include name="**/*.html"/>
            </fileset>
            <filterset>
                <filter token="NAV.MAIN" value="${nav.main}"/>
                <filter token="NAV.MANUAL" value="${nav.manual}"/>
                <filter token="NAV.IDE" value="${nav.ide}"/>
                <filter token="NAV.NEWS" value="${nav.news}"/>
                <filter token="ANALYTICS" value="${analytics}"/>
                <filter token="BUILD.VERSION" value="${build.version}"/>
            </filterset>
        </copy>

        <copy todir="${release.site.dir}">
            <fileset dir="${src.dir}/site">
                <exclude name="*.html"/>
            </fileset>
        </copy>
        <copy todir="${release.site.dir}/xml/ns/dbchangelog">
            <fileset dir="${src.dir}/java/liquibase/">
                <include name="*.xsd"/>
            </fileset>
        </copy>
        <copy todir="${release.site.dir}/samples/">
            <fileset dir="${src.dir}/samples"/>
        </copy>
        <copy todir="${release.site.dir}/manual/latest/api">
            <fileset dir="${reports.dir}/api"/>
        </copy>
        <copy todir="${release.site.dir}/manual/latest/doxygen">
            <fileset dir="${reports.dir}/doxygen"/>
        </copy>

        <zip destfile="${release.dir}/site-${build.version}.zip">
            <zipfileset dir="${release.site.dir}"/>
        </zip>

    </target>

    <target name="javadoc" depends="prepare">
        <mkdir dir="${reports.dir}/api"></mkdir>
        <javadoc
                destdir="${reports.dir}/api"
                author="true"
                version="true"
                use="true"
                windowtitle="LiquiBASE API (${build.version})"
                linksource="false"
                useexternalfile="yes"
                breakiterator="yes">

            <fileset dir="${src.dir}/java" defaultexcludes="yes"/>
            <classpath refid="classpath"/>
            <bottom><![CDATA[<i>Copyright &#169; 2006-2007 Sundog. All Rights Reserved.</i>]]></bottom>
        </javadoc>
    </target>

    <target name="doxygen" depends="prepare">
        <taskdef name="doxygen" classname="org.doxygen.tools.DoxygenTask">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib.compile.dir}">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${lib.14jvm.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>

            <doxygen configFilename="${basedir}/../Doxyfile" />
    </target>

    <target name="junit" depends="prepare">
        <mkdir dir="${reports.dir}/junit/"/>
        <mkdir dir="${reports.dir}/junit/${ant.project.name}/"/>
        <junit printsummary="yes" haltonfailure="${halt.on.junit.failure}" fork="yes" forkmode="once" reloading="false"
               failureproperty="unit.tests.failed"
               jvm="${java.home}/bin/java">
            <!--<jvmarg value="-Xmx256m"/>-->
            <env key="JAVA_HOME" path="${env.JAVA_HOME}"/>
            <classpath>
                <pathelement path="${build.dir}"/>
                <pathelement path="${build.test.dir}"/>
                <path refid="classpath"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${reports.dir}/junit/${ant.project.name}">
                <fileset dir="${build.test.dir}">
                    <include name="**/*Test.class"/>
                    <exclude name="**/Base*"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
                <fileset dir="${build.db.test.dir}">
                    <include name="**/*Test.class"/>
                    <exclude name="**/Base*"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
            </batchtest>
        </junit>

        <mkdir dir="${reports.dir}/junit-report/"/>
        <mkdir dir="${reports.dir}/junit-report/${ant.project.name}/"/>
        <junitreport todir="${reports.dir}/junit-report/${ant.project.name}">
            <fileset dir="${reports.dir}/junit/${ant.project.name}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${reports.dir}/junit-report/${ant.project.name}"/>
        </junitreport>
    </target>

    <target name="all" depends="prepare">
        <antcall target="clean" inheritAll="true" inheritRefs="true"/>
        <antcall target="prepare" inheritAll="true" inheritRefs="true"/>
        <antcall target="compile" inheritAll="true" inheritRefs="true"/>
        <!--<antcall target="junit" inheritAll="true" inheritRefs="true"/>-->
        <antcall target="javadoc" inheritAll="true" inheritRefs="true"/>
        <antcall target="doxygen" inheritAll="true" inheritRefs="true"/>
        <antcall target="site" inheritAll="true" inheritRefs="true"/>
        <antcall target="package" inheritAll="true" inheritRefs="true"/>
    </target>
</project>
