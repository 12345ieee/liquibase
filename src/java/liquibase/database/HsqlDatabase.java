package liquibase.database;

import liquibase.migrator.exception.JDBCException;
import liquibase.util.ISODateFormat;

import java.sql.Connection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.text.DateFormat;

public class HsqlDatabase extends AbstractDatabase {
    public boolean isCorrectDatabaseImplementation(Connection conn) throws JDBCException {
        return "HSQL Database Engine".equalsIgnoreCase(getDatabaseProductName(conn));
    }

    public String getDefaultDriver(String url) {
        if (url.startsWith("jdbc:hsqldb:")) {
            return "org.hsqldb.jdbcDriver";
        }
        return null;
    }


    public String getProductName() {
        return "Hsqldb";
    }

    public String getTypeName() {
        return "hsqldb";
    }

    public boolean supportsSequences() {
        return true;
    }

    public boolean supportsInitiallyDeferrableColumns() {
        return false;
    }

    public String getSchemaName() throws JDBCException {
        return "PUBLIC";
    }

    protected String getBooleanType() {
        return "BOOLEAN";
    }

    protected String getCurrencyType() {
        return "DECIMAL";
    }

    protected String getUUIDType() {
        return "VARCHAR(36)";
    }

    protected String getClobType() {
        return "CLOB";
    }

    protected String getBlobType() {
        return "BLOB";
    }

    protected String getDateTimeType() {
        return "DATETIME";
    }

    public String getCurrentDateTimeFunction() {
        return "NOW()";
    }

    public String getDropTableSQL(String tableName) {
        return "DROP TABLE " + tableName;
    }

    public String getAutoIncrementClause() {
        return "GENERATED BY DEFAULT AS IDENTITY IDENTITY";
    }

    /**
     * Currently implemented as a hack that only expectes three values because HSQL only supports a 2 arg concat function.
     * It should be easy to re-implement if/when we need a concatSQL function that takes a truely variable number of args.
     */
    public String getConcatSql(String... values) {
        if (values.length != 3) {
            throw new RuntimeException("Expected 3 values");
        }

        return "CONCAT(CONCAT(" + values[0] + ", " + values[1] + "), " + values[2] + ")";
    }


    public String getDateLiteral(String isoDate) {
        String returnString = isoDate;
        try {
            if (isDateTime(isoDate)) {
                DateFormat isoTimestampFormat = new ISODateFormat();
                DateFormat dbTimestampFormat = new SimpleDateFormat("yyyy-mm-dd HH:MM:ss.000000000");
                returnString = dbTimestampFormat.format(isoTimestampFormat.parse(isoDate));
            }
        } catch (ParseException e) {
            throw new RuntimeException("Unexpected date format");
        }
        return "'" + returnString + "'";
    }
}
